generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String @unique
  password String

  avatarPath String @default("/Users/vgcod3/Pictures/drotik.jpeg") @map("avatar_path")
  name       String @unique

  phone String @default("")

  orders Order[]
  reviews Review[]

  favorites Product[]

  @@map("user")
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name        String      @unique
  slug        String      @unique
  description String
  price       Float
  images      String[]

  orderItems OrderItem[]

  reviews Review[]

  category Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?     @map("category_id")

  user User? @relation(fields: [userId], references: [id])
  userId Int? @map("user_id")

  @@map("product")

}

model Category {
  id        Int      @id @default(autoincrement())

  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name String @unique
  slug String @unique

  products Product[]

  @@map("category")
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELED
}

model Review {
  id        Int      @id @default(autoincrement())

  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  rating Float
  text   String

  user User? @relation(fields: [userId], references: [id])
  userId Int?   @map("user_id")

  product Product? @relation(fields: [productId], references: [id])
  productId Int?     @map("product_id")

  @@map("review")
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  status OrderStatus @default(PENDING)
  items  OrderItem[]

  user User? @relation(fields: [userId], references: [id])
  userId Int?   @map("user_id")

  @@map("order")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  quantity Int
  price    Float

  order   Order? @relation(fields: [orderId], references: [id])
  orderId Int?   @map("order_id")

  product   Product? @relation(fields: [productId], references: [id])
  productId Int?     @map("product_id")

  @@map("order_item")
}
